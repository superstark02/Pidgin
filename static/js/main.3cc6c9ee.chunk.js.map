{"version":3,"sources":["firebase.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","name","colorOverlay","db","firestore","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","Child","match","params","id","App","state","classes","images","eligibility","qualifications","note","courses","offers","collection","doc","get","then","snapshot","forEach","data","push","setState","this","map","class","src","wallpaper","alt","style","profileImage","round","size","Box","boxShadow","bgcolor","fees","experience","align","offer","borderColor","title","detail","age","type","duration","timings","image","item","course","rowSpan","marginRight","fontSize","paddingBottom","paddingTop","price","teacher","textAlign","path","component","React","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cc6c9ee.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYoIBWm4Hw6kCP1P6jPWvqgJsXQdFmuPM\",\r\n    authDomain: \"pidgin-ds.firebaseapp.com\",\r\n    databaseURL: \"https://pidgin-ds.firebaseio.com\",\r\n    projectId: \"pidgin-ds\",\r\n    storageBucket: \"pidgin-ds.appspot.com\",\r\n    messagingSenderId: \"651681146366\",\r\n    appId: \"1:651681146366:web:dca41ccad229815cbb0caf\",\r\n    measurementId: \"G-R2H7TXW5LZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\n  export const auth = firebase.auth();\r\n  export const db = firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FaBeer, FaMusic, FaMicrophone, FaStar, FaBolt } from 'react-icons/fa';\nimport ReactAvatar from 'react-avatar';\nimport Box from '@material-ui/core/Box';\n\nimport {\n  HashRouter as Router,\n  Route,\n} from 'react-router-dom'\n\nimport {db,auth} from './firebase'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n}));\n\nvar name\nvar colorOverlay\n\nfunction Child ({match}) {\n  name = match.params.id\n  return(\n    <div>\n    </div>\n  )\n}\n\nclass App extends React.Component{\n  state = {\n    classes: null,\n    images: null,\n    eligibility: null,\n    qualifications: null,\n    note: null,\n    courses: null,\n    offers: null\n  }\n\n  componentDidMount(){\n    const data = db.collection('Classes').doc(name).collection('Information');    \n     data.get()\n      .then(snapshot=>{\n        const classes = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          classes.push(data)\n        })\n        this.setState({classes:classes})\n      })\n\n    const images = db.collection('Classes').doc(name).collection('Images');    \n      images.get()\n      .then(snapshot=>{\n        const images = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          images.push(data)\n        })\n        this.setState({images:images})\n      })\n\n      const eligibility = db.collection('Classes').doc(name).collection('Eligibility');    \n      eligibility.get()\n      .then(snapshot=>{\n        const eligibility = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          eligibility.push(data)\n        })\n        this.setState({eligibility:eligibility})\n      })\n\n      const qualifications = db.collection('Classes').doc(name).collection('Qualifications');    \n      qualifications.get()\n      .then(snapshot=>{\n        const qualifications = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          qualifications.push(data)\n        })\n        this.setState({qualifications:qualifications})\n      })\n\n      const note = db.collection('Classes').doc(name).collection('Note');    \n      note.get()\n      .then(snapshot=>{\n        const note = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          note.push(data)\n        })\n        this.setState({note:note})\n      })\n\n      const courses = db.collection('Classes').doc(name).collection('Courses');    \n      courses.get()\n      .then(snapshot=>{\n        const courses = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          courses.push(data)\n        })\n        this.setState({courses:courses})\n      })\n\n      const offers = db.collection('Classes').doc(name).collection('Offers');    \n      offers.get()\n      .then(snapshot=>{\n        const offers = []\n        snapshot.forEach(doc=>{\n          const data = doc.data()\n          offers.push(data)\n        })\n        this.setState({offers:offers})\n      })\n  }\n\n  render() {\n    return (\n      <Router>\n        {\n          this.state.classes&&\n          this.state.classes.map(classes=>{\n            colorOverlay = classes.colorOverlay;\n            return(\n              <div>\n                  <Router>\n                    <div class=\"App\">\n                      <div class=\"wallpaper\">\n                        <img src={classes.wallpaper} alt=\"Avatar\" class=\"image\"/>\n                        <div class=\"overlay\" style={{ background: colorOverlay}}>\n                          <div class=\"avatar\">\n                          <ReactAvatar src={classes.profileImage} round=\"50%\" size=\"150\" style={{background:\"white\"}}/>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"details\">\n                      <Box boxShadow={2} bgcolor=\"transparent\">\n                          <table class=\"table\">\n                            <tr class=\"tr\">\n                              <td class=\"th\">{classes.classes}/week</td>\n                              <td class=\"th\">₹{classes.fees}/class</td>\n                              <td class=\"th\">{classes.experience}</td>\n                            </tr>\n                            <tr>\n                              <td align=\"center\">Classes</td>\n                              <td align=\"center\">Fees</td>\n                              <td align=\"center\">Experience</td>\n                            </tr>\n                          </table>\n                      </Box>\n                      </div>\n\n                      <div class='carousel'>\n                          {\n                              this.state.offers&&\n                              this.state.offers.map(offer=>{\n                                return(\n                                 <div class='offer' style={{borderColor:colorOverlay}}>\n                                    <table style={{width:'150px',height:'auto'}}>\n                                      <tr>\n                                        <td><FaStar/></td>\n                                        <td>{offer.title}</td>\n                                      </tr>\n\n                                      <tr>\n                                        <td></td>\n                                        <td>{offer.detail}</td>\n                                      </tr>\n                                    </table>\n                                 </div>\n                                )\n                              })\n                            }    \n                      </div>\n                \n                      <div class=\"container\">\n                          <div class=\"head\">General</div>\n                          <div class=\"info\">\n                            <div class=\"field\">Age</div>\n                            <div class=\"attribute\">{classes.age}</div>\n                          </div>\n                          <div class=\"info\">\n                            <div class=\"field\">Type</div>\n                            <div class=\"attribute\">{classes.type}</div>\n                          </div>\n                          <div class=\"info\">\n                            <div class=\"field\">Duration</div>\n                            <div class=\"attribute\">{classes.duration}</div>\n                          </div>\n                          <div class=\"info\">\n                            <div class=\"field\">Timings</div>\n                            <div class=\"attribute\">{classes.timings}</div>\n                          </div>\n                          <div class=\"head\">Highlights</div>\n                          <div class=\"carousel\">\n                            {\n                              this.state.images&&\n                              this.state.images.map(image=>{\n                                return(\n                                  <img src={image.item}/>         \n                    \n                                )\n                              })\n                            }        \n                          </div>\n                          \n                          <div class=\"head\">Courses</div>\n                          {\n                              this.state.courses&&\n                              this.state.courses.map(course=>{\n                                \n                                return(\n                                  <table class=\"courseTable\">\n                                    <tr>\n                                      <td style={{height:'50px',width:'50px'}} rowSpan='2'>\n                                        <img src={course.image} style={{height:'50px', width:'50px',marginRight:'10px'}}/>\n                                        </td>\n\n                                      <td style={{fontSize:'14px',height:'auto',paddingBottom:'0px'}}>{course.title}</td>\n                                    </tr>\n\n                                    <tr>\n                                      <td style={{fontSize:'14px',paddingTop:'0px'}}>₹{course.price}</td>\n                                    </tr>\n                                  </table>\n                    \n                                )\n                              })\n                            }      \n\n                          <div class=\"head\">Eligibility</div>\n                          <ul class=\"list\">\n                          {\n                              this.state.eligibility&&\n                              this.state.eligibility.map(eligibility=>{\n                                return(\n                                  <li>{eligibility.item}</li>\n                                )\n                              })\n                            }    \n                          </ul>\n\n                          <div class=\"head\">Qualifications</div>\n                          <div class=\"listHeader\">{classes.teacher}</div>\n                          <ul class=\"list\">\n                          {\n                              this.state.qualifications&&\n                              this.state.qualifications.map(qualifications=>{\n                                return(\n                                  <li>{qualifications.item}</li>\n                                )\n                              })\n                            }    \n                          </ul>\n\n                          <div class=\"head\">Note from Teacher</div>\n                          <ul class=\"list\">\n                          {\n                              this.state.note&&\n                              this.state.note.map(note=>{\n                                return(\n                                  <li>{note.item}</li>\n                                )\n                              })\n                            }    \n                          </ul>\n                          <div style={{height:\"50px\", textAlign:'center',paddingTop:'20px'}}>\n                             <p class=\"tail\">©Pidgin2020</p>\n                          </div>\n                          \n                        </div>\n                \n                    </div>\n                  </Router>\n              </div>\n            )\n          })\n        }\n        <Route path=\"/:id\" component={Child}/>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}